openapi: "3.0.0"
info:
  version: 1.0.0
  title: Mothership
servers:
  - url: http://mothership-516381200.eu-west-1.elb.amazonaws.com
    description: staging environment
paths:
  /api/resources/newsletter/subscription:
    post:
      summary: Create a subscription
      description: Creates customer newsletter subscription.
      operationId: createSubscription
      tags:
        - newsletter subscription
      responses:
        '200':
          description: newsletter subscription created
      requestBody:
        description: Provide customer email here
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/NewsletterSubscription'

  /api/resources/runtimeconfig/{spaceId}:
    parameters:
      - name: spaceId
        in: path
        description: ID of space. Configured in Contentful.
        required: true
        example: uk-middle-tier
        schema:
          type: string
    get:
      summary: Get all configuration entries for the given space
      description: Returns all the configuration for the given space. The space and its configurations are setup and managed in Contentful. Use this endpoint for configuration that you wish to be able to change quickly at runtime, for example emergency feature switches.
      operationId: getRuntimeConfiguration
      tags:
        - configuration
      responses:
        '200':
          description: The space has been found. All configurations in this space are returned.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/RuntimeConfigurationSpace'
        '404':
          description: The spaceId doesn't correspond to a space in contentful. Please check your spelling matches what is given in Contentful.

  /api/resources/{storeCode}/wishlist/{productId}:
    parameters:
      - $ref: "#/components/parameters/AuthHeaderParam"
      - $ref: "#/components/parameters/StoreParam"
      - name: productId
        in: path
        description: Product id.
        example: "qgqvhocdkrpwy2lqon2gsy3ll5vwszdnmfxhgx3lnfzxg="
        required: true
        schema:
          type: string
    put:
      summary: Add product to a wishlist
      operationId: addProductToWishlist
      tags:
        - wishlist
      responses:
        '204':
          description: No content

  /api/resources/{storeCode}/addressBook/:
    parameters:
      - $ref: "#/components/parameters/AuthHeaderParam"
      - $ref: "#/components/parameters/StoreParam"
      - name: includeAll
        in: query
        description: Flag to include all additional addresses in the response.
        example: true
        required: false
        schema:
          type: boolean
    get:
      summary: Get the address book for the customer
      description: Returns all the adresses for the given customer
      operationId: getAddressBook
      tags:
      - address
      - address book
      responses:
        '200':
          description: An address book for the user has been found. The address book is returned
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AddressBook'

  /api/content/{storeCode}/navigation:
    parameters:
      - $ref: '#/components/parameters/StoreParam'
    get:
      summary: Get navigation data model
      description: Returns data needed for navigation panel on charlotte's webpage.
      operationId: getNavigation
      tags:
        - content
      responses:
        '200':
          description: Please note that provided examples are missing subNavigationType and topLevelLink properties due to swagger ui shortcomings in handling inheritance. Refer to Model tab instead.
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/NavigationModel'

  /api/content/{storeCode}/productlisting/{productListingId}:
    parameters:
      - $ref: '#/components/parameters/StoreParam'
      - name: productListingId
        in: path
        description: Product Listing Page id. Should be human readable and can contain slashes.
        required: true
        schema:
          type: string
    get:
      summary: Get product listing page model
      description: Returns data needed for PLP.
      operationId: getProductListingPage
      tags:
        - content
      responses:
        '200':
          description: PLP model data
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ProductListingModel'

  /api/content/{storeCode}/product/{productId}:
    parameters:
      - $ref: '#/components/parameters/StoreParam'
      - name: productId
        in: path
        description: Product id. Human readable and can contain slashes.
        required: true
        schema:
          type: string
    get:
      summary: Get product data model
      description: Returns data needed for PDP.
      operationId: getProductPage
      tags:
        - content
      responses:
        '200':
          description: PDP model data
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/ProductDetailsModel'

  /api/resource/{storeCode}/basket/summary:
    parameters:
      - $ref: '#/components/parameters/StoreParam'
      - $ref: '#/components/parameters/AuthHeaderParam'
    get:
      summary: Get basket summary
      description: Returns basket value and number of items.
      operationId: getBasketSummary
      tags:
        - basket
      responses:
        '200':
          description: Basket summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasketSummary'
  /api/resources/{storeCode}/basket/{productId}:
    put:
      parameters:
        - $ref: "#/components/parameters/AuthHeaderParam"
        - $ref: "#/components/parameters/StoreParam"
        - name: productId
          in: path
          description: Product id.
          example: "qgqvhocdkrpwy2lqon2gsy3ll5vwszdnmfxhgx3lnfzxg="
          required: true
          schema:
            type: string

      summary: Add product to the basket
      operationId: addProductToBasket
      tags:
        - basket
      requestBody:
        description: Quantity of the product being added.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quantity'
      responses:
        '204':
          description: No content
  /api/resources/{storeCode}/basket/{basketId}/{lineItemId}:
    put:
      parameters:
        - $ref: "#/components/parameters/AuthHeaderParam"
        - $ref: "#/components/parameters/StoreParam"
        - $ref: "#/components/parameters/BasketIdParam"
        - $ref: "#/components/parameters/LineItemIdParam"

      summary: Update lineitem in the basket
      operationId: updateProductInBasket
      tags:
        - basket
      requestBody:
        description: Updated quantity of the product.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Quantity'
      responses:
        '204':
          description: No content
    delete:
      parameters:
        - $ref: "#/components/parameters/AuthHeaderParam"
        - $ref: "#/components/parameters/StoreParam"
        - $ref: "#/components/parameters/BasketIdParam"
        - $ref: "#/components/parameters/LineItemIdParam"

      summary: Delete product from basket
      operationId: removeProductFromBasket
      tags:
        - basket
      responses:
        '204':
          description: No content
  /api/resources/{storeCode}/basket/{basketId}:
    delete:
      parameters:
        - $ref: "#/components/parameters/AuthHeaderParam"
        - $ref: "#/components/parameters/StoreParam"
        - $ref: "#/components/parameters/BasketIdParam"
      summary: Empty basket
      operationId: emptyBasket
      tags:
        - basket
      responses:
        '204':
          description: No content
  /api/resources/oauth/authorize/{storeCode}:
    post:
      parameters:
        - $ref: '#/components/parameters/StoreParam'
        - in: header
          name: Authorization
          description: optional public token, if merge is needed during REGISTERED user login
          example: Bearer 1319c1a7-b984-4765-b25e-1aafbcbd72b1
          required: false
          schema:
            type: string
      requestBody:
        description: Role of the user. Username and password if REGISTERED user.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthData'
      summary: Get auth token for public or registered user
      description: Returns authentication token
      operationId: authenticate
      tags:
        - authentication
      responses:
        '200':
          description: Auth token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenResponse'
  /api/resources/oauth/unauthorize/:
    delete:
      parameters:
        - $ref: '#/components/parameters/AuthHeaderParam'
      description: Delete auth token
      tags:
        - authentication
      responses:
        '200':
          description: Auth token deleted

components:
  schemas:
    NewsletterSubscription:
      required:
        - email
      properties:
        email:
          type: string
          example: look@you.lol
    Price:
      required:
        - amount
        - currencyCode
      properties:
        amount:
          type: number
          example: 10.00
        currencyCode:
          type: string
          enum: [GBP, EUR]
          example: GBP
    BasketSummary:
      required:
        - totalQuantity
        - price
      properties:
        totalQuantity:
          type: integer
          example: 1
        price:
            $ref: '#/components/schemas/Price'
    AccessTokenResponse:
      properties:
        access_token:
          type: string
          example: 1319c1a7-b984-4765-b25e-1aafbcbd72b1
        token_type:
          type: string
          example: bearer
        scope:
          type: string
          example: ct_store_uk
        role:
          type: string
          example: REGISTERED # It will be PUBLIC for public users
        expires_in:
          type: integer
          example: 123456
    AuthData:
      properties:
        role:
          type: string
          enum: [PUBLIC, REGISTERED]
          example: REGISTERED
        username:
          type: string
          example: gb_customer@ct.com
          description: Only needed for registered users
        password:
          type: string
          example: 11111111
          description: Only needed for registered users
    Quantity:
      required:
        - quantity
      properties:
        quantity:
          type: integer
          example: 5

    RuntimeConfigurationSpace:
      type: object
      properties:
        spaceId:
          type: string
          example: uk-middle-tier
        configs:
          type: array
          items:
            $ref: '#/components/schemas/RuntimeConfiguration'

    RuntimeConfiguration:
      type: object
      properties:
        key:
          type: string
          example: use-bazaar-voice
        stringValue:
          type: string
          example: hello world
        numberValue:
          type: number
          example: 123
        booleanValue:
          type: boolean
          example: false

    Filter:
      type: object
      properties:
        label:
          type: string
          example: Colour
        options:
          type: array
          items:
            $ref: '#/components/schemas/FilterOption'
        type:
          type: string
          enum:
            - SUBCATEGORY
            - COLOUR
            - SHADE
            - PRICE
          example: COLOUR
      title: Filter

    FilterOption:
      type: object
      properties:
        label:
          type: string
          example: Pink
        value:
          type: string
          example: PINK
      title: FilterOption

    Sku:
      type: object
      properties:
        id:
          type: string
          description: you can use this id to perform product operations
          example: very_victoria_lipstick
        href:
          type: string
          example: '#'
        subtitle:
          type: string
          example: Very Victoria
        shortDescription:
          type: string
          example: 'Luminous, modern matte lipstick with a long-lasting hydrating formula to give you fuller, softer lips.'
        sellLine:
          type: string
          example: 'Award Winner'
        detailedProductDescription:
          $ref: '#/components/schemas/DetailedProductDescription'
        price:
          $ref: '#/components/schemas/PriceContainer'
        featureBlock:
          type: array
          items:
            $ref: '#/components/schemas/FeatureBlockItem'
        images:
          type: array
          items:
            $ref: '#/components/schemas/Image'
        swatchImage:
          $ref: '#/components/schemas/Image'
        availability:
          type: string
          enum:
            - BUNDLE
            - OUT_OF_STOCK
            - COMING_SOON
            - SOLD_OUT
            - AVAILABLE
        widgets:
          type: array
          items:
            $ref: '#/components/schemas/Widget'
      title: Sku

    Widget:
      type: object
      required:
      - type
      oneOf:
      - $ref: '#/components/schemas/CarouselWidget'
      - $ref: '#/components/schemas/CrossSellWidget'
      - $ref: '#/components/schemas/GalleryWidget'
      - $ref: '#/components/schemas/InformationMapWidget'
      - $ref: '#/components/schemas/TwoColumnWidget'
      - $ref: '#/components/schemas/VideoBlockWidget'
      discriminator:
        propertyName: subNavigationType
        mapping:
          CAROUSEL: '#/components/schemas/CarouselWidget'
          CROSS_SELL: '#/components/schemas/CrossSellWidget'
          GALLERY: '#/components/schemas/GalleryWidget'
          INFORMATION_MAP: '#/components/schemas/InformationMapWidget'
          TWO_COLUMN: '#/components/schemas/TwoColumnWidget'
          VIDEO_BLOCK: '#/components/schemas/VideoBlockWidget'
      properties:
        type:
          type: string
          enum:
            - CAROUSEL
            - CROSS_SELL
            - GALLERY
            - TWO_COLUMN
            - VIDEO_BLOCK
            - INFORMATION_MAP
      title: Widget

    CarouselWidget:
      title: CarouselWidget
      type: object
      allOf:
      - $ref: '#/components/schemas/Widget'
      properties:
        backgroundColour:
          type: string
          example: "transparent"
        items:
          type: array
          items:
            $ref: '#/components/schemas/Widget'

    GalleryWidget:
      title: GalleryWidget
      type: object
      allOf:
      - $ref: '#/components/schemas/Widget'
      properties:
        title:
          type: string
          example: "ON YOUR SKINTONE"
        backgroundColour:
          type: string
          example: "transparent"
        items:
          type: array
          items:
            $ref: '#/components/schemas/Image'

    InformationMapWidget:
      title: InformationMapWidget
      type: object
      allOf:
      - $ref: '#/components/schemas/Widget'
      properties:
        content:
          type: object
          additionalProperties:
            type: string
          example:
            "APPLICATION TIPS": "Resize and reshape your lips using the lip liner in pillow talk for fair skin or foxy brown for dark skin."
            "FREQUENTLY ASKED QUESTIONS": "1. How to apply it on my face? - no idea"
          backgroundColour:
            type: string
            example: "transparent"

    TwoColumnWidget:
      title: TwoColumnWidget
      type: object
      allOf:
      - $ref: '#/components/schemas/Widget'
      properties:
        image:
          $ref: '#/components/schemas/Image'
        richDescription:
          type: string
          example: "#MY STORY"
        descriptionPosition:
          type: string
          example: "RIGHT"
        backgroundColour:
          type: string
          example: "transparent"

    VideoBlockWidget:
      title: VideoBlockWidget
      type: object
      allOf:
      - $ref: '#/components/schemas/Widget'
      properties:
        videoUrl:
          type: string
          example: "#"
        actionLabel:
          type: string
          example: "WATCH NOW"
        richDescription:
          type: string
          example: "#MY STORY"
        descriptionPosition:
          type: string
          example: "RIGHT"
        backgroundColour:
          type: string
          example: "transparent"

    CrossSellWidget:
      title: CrossSellWidget
      type: object
      allOf:
      - $ref: '#/components/schemas/Widget'
      properties:
        title:
          type: string
          example: "CHARLOTTE RECOMMENDS"
        skus:
          type: array
          items:
            $ref: '#/components/schemas/CrossSellSku'
        backgroundColour:
          type: string
          example: "transparent"

    CrossSellSku:
      title: CrossSellSku
      type: object
      allOf:
      - $ref: '#/components/schemas/Widget'
      properties:
        id:
          type: string
          example: "very_victoria_lipstick"
        href:
          type: string
          example: "#"
        image:
          $ref: '#/components/schemas/Image'
        title:
          type: string
          example: "INSTANT LOOK IN A PALETTE"
        subtitle:
          type: string
          example: "SMOKEY EYE BEAUTY"
        description:
          type: string
          example: "Volume 2 Of the Best-Selling Volumising Mascara"
        price:
          $ref: '#/components/schemas/PriceContainer'



    DetailedProductDescription:
      type: object
      properties:
        title:
          type: string
          example: "INSPIRED BY VICTORIA BECKHAM, PERFECT FOR EVERYDAY MAKEUP"
        descriptionHead:
          type: string
          example: "Luminous, modern matte lipstick with a long-lasting hydrating formula to give you fuller, softer lips."
        descriptionTail:
          type: string
          example: "Exclusively enriched with Lipstick Tree extract which protects lips and is a natural anti-oxidant, and Orchid Extract which soothes and hydrates for a soft, buildable cashmere finish. Layer and build the color to create the intensity you want, from a light-as-air matte stain to dramatic full-velvet coverage. Color glides on easily and precisely, thanks to the specially shaped square-tip, inspired by the classic shape of a lip brush."
        backgroundColour:
          type: string
          example: "transparent"
      title: DetailedProductDescription

    FeatureBlockItem:
      type: object
      properties:
        icon:
          $ref: '#/components/schemas/Image'
        text:
          type: string
          example: "Free delivery"
      title: FeatureBlockItem

    PriceContainer:
      type: object
      required:
        - current
      properties:
        listingPrice:
          $ref: '#/components/schemas/Price'
        purchasePrice:
          $ref: '#/components/schemas/Price'
      title: PriceContainer

    Image:
      type: object
      properties:
        alt:
          type: string
          example: Image alt text
        imageSrc:
          type: string
          example: /placeholder/navigation/glow.png
        title:
          type: string
          example: Image Title
      title: Image

    Link:
      type: object
      properties:
        href:
          type: string
          example: '#'
        label:
          type: string
          example: link label
      title: Link

    ListOfLinks:
      type: object
      properties:
        topLevelLink:
          type: string
          example: '#'
        childLinks:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ExpandedLink:
      type: object
      properties:
        label:
          type: string
          example: Pretty Youth Glow
        content:
          type: string
          example: Blush
        title:
          type: string
          example: Pretty Youth Glow Blush
        href:
          type: string
          example: '#'
        image:
          $ref: '#/components/schemas/Image'

    ImageLink:
      type: object
      properties:
        href:
          type: string
          example: '#'
        label:
          type: string
          example: link label
        image:
          $ref: '#/components/schemas/Image'
      title: ImageLink

    NavigationModel:
      type: object
      properties:
        navigationItems:
          type: array
          items:
            $ref: '#/components/schemas/NavigationItem'
      title: NavigationModel

    NavigationItem:
      type: object
      oneOf:
      - $ref: '#/components/schemas/SingleLevelWithBanner'
      - $ref: '#/components/schemas/SingleLevelImageLinks'
      - $ref: '#/components/schemas/ExpandedLinksWithBanner'
      - $ref: '#/components/schemas/MultiLevelWithBanner'
      - $ref: '#/components/schemas/MultiLevelWithImageGrid'
      - $ref: '#/components/schemas/MultiLevelWithMediaLinks'
      discriminator:
        propertyName: subNavigationType
        mapping:
          SINGLE_LEVEL_WITH_BANNER: '#/components/schemas/SingleLevelWithBanner'
          SINGLE_LEVEL_IMAGE_LINKS: '#/components/schemas/SingleLevelImageLinks'
          EXPANDED_LINKS_WITH_BANNER: '#/components/schemas/ExpandedLinksWithBanner'
          MULTI_LEVEL_WITH_BANNER: '#/components/schemas/MultiLevelWithBanner'
          MULTI_LEVEL_WITH_IMAGE_GRID: '#/components/schemas/MultiLevelWithImageGrid'
          MULTI_LEVEL_WITH_MEDIA_LINKS: '#/components/schemas/MultiLevelWithMediaLinks'
      properties:
        subNavigationType:
          type: string
          enum:
            - EXPANDED_LINKS_WITH_BANNER
            - MULTI_LEVEL_WITH_BANNER
            - MULTI_LEVEL_WITH_IMAGE_GRID
            - MULTI_LEVEL_WITH_MEDIA_LINKS
            - SINGLE_LEVEL_IMAGE_LINKS
            - SINGLE_LEVEL_WITH_BANNER
          example: EXPANDED_LINKS_WITH_BANNER
        topLevelLink:
          $ref: '#/components/schemas/Link'
      required:
      - subNavigationType
      - topLevelLink
      title: NavigationItem

    SingleLevelWithBanner:
      title: SingleLevelWithBanner
      type: object
      allOf:
      - $ref: '#/components/schemas/NavigationItem'
      properties:
        banner:
          $ref: '#/components/schemas/ImageLink'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        socialLinks:
          type: boolean
          example: false

    SingleLevelImageLinks:
      title: SingleLevelImageLinks
      type: object
      allOf:
      - $ref: '#/components/schemas/NavigationItem'
      properties:
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'

    ExpandedLinksWithBanner:
      title: ExpandedLinksWithBanner
      type: object
      allOf:
      - $ref: '#/components/schemas/NavigationItem'
      properties:
        banner:
          $ref: '#/components/schemas/ImageLink'
        links:
          type: array
          items:
            $ref: '#/components/schemas/ExpandedLink'

    MultiLevelWithBanner:
      title: MultiLevelWithBanner
      type: object
      allOf:
      - $ref: '#/components/schemas/NavigationItem'
      properties:
        banner:
          $ref: '#/components/schemas/ImageLink'
        links:
          type: array
          items:
            $ref: '#/components/schemas/ListOfLinks'

    MultiLevelWithImageGrid:
      title: MultiLevelWithImageGrid
      type: object
      allOf:
      - $ref: '#/components/schemas/NavigationItem'
      properties:
        imageGridTitle:
          type: string
          example:
        banner:
          $ref: '#/components/schemas/ImageLink'
        links:
          type: array
          items:
            $ref: '#/components/schemas/ListOfLinks'

    MultiLevelWithMediaLinks:
      title: MultiLevelWithMediaLinks
      type: object
      allOf:
      - $ref: '#/components/schemas/NavigationItem'
      properties:
        imageGridTitle:
          type: string
          example:
        mediaLinks:
          type: array
          items:
            $ref: '#/components/schemas/ImageLink'
        links:
          type: array
          items:
            $ref: '#/components/schemas/ListOfLinks'

    ProductDetailsModel:
      type: object
      properties:
        breadcrumbs:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        productName:
          type: string
        skus:
          type: array
          items:
            $ref: '#/components/schemas/Sku'
      title: ProductDetailsModel

    ProductListingModel:
      type: object
      properties:
        description:
          type: string
          example: "Get eyes to hypnotise with Charlotte Tilbury's array of eye makeup. The collection includes lengthening mascara, the perfect eyeshadow palette for a smokey eye, feline flick eyeliner & eyebrow gel for gorgeous defined brows."
        title:
          type: string
          example: EYESHADOW
        heroImage:
          $ref: '#/components/schemas/Image'
        breadcrumbs:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        heroLinks:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductPreview'

      title: ProductListingModel

    ProductPreview:
      type: object
      properties:
        id:
          type: string
          description: you can use this id to perform product operations
          example: 9as8dfhasikfdjhasfiodu
        title:
          type: string
          example: Matte Revolution
        subtitle:
          type: string
          example: Very Victoria
        description:
          type: string
          example: 'Luminous, modern matte lipstick with a long-lasting hydrating formula to give you fuller, softer lips.'
        price:
          type: string
          example: '£32.00'
        sellLine:
          type: string
          example: 'New In'
        href:
          type: string
          example: "#"
        image:
          $ref: '#/components/schemas/Image'
        rollOverImage:
          $ref: '#/components/schemas/Image'
        availability:
          type: string
          enum:
            - BUNDLE
            - OUT_OF_STOCK
            - COMING_SOON
            - SOLD_OUT
            - AVAILABLE
        wishList:
          type: boolean
      title: ProductPreview

    AddressBook:
      type: object
      properties:
        billingAddress:
          $ref: '#/components/schemas/Address'
        shippingAddress:
          $ref: '#/components/schemas/Address'
        additionalAdresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
      title: AddressBook

    Address:
      type: object
      properties:
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        company:
          type: string
          example: yourcompany name
        telephone:
          type: string
          example: +44 123 456 789
        fax:
          type: string
          example: +44 789 456 123
        street:
          type: string
          example: address street 1
        city:
          type: string
          example: London
        county:
          type: string
          example: XX
        postCode:
          type: string
          example: NW1
        country:
          type: string
          example: UK

  parameters:
    StoreParam:
      name: storeCode
      in: path
      description: Selected store code
      required: true
      example: UK
      schema:
        type: string
        enum: [UK, EU]
    AuthHeaderParam:
      name: Authorization
      in: header
      required: true
      example: Bearer 1319c1a7-b984-4765-b25e-1aafbcbd72b1
      schema:
        type: string
      description: Authorization token
    BasketIdParam:
      name: basketId
      in: path
      description: Basket identifier
      required: true
      example: ha3tezrtmy2diljummztkljumi3=
      schema:
        type: string
        example: ha3tezrtmy2diljummztkljumi3=
    LineItemIdParam:
      name: lineItemId
      in: path
      description: Line item identifier
      required: true
      example: meytimzsgiygkljumvrgkljumu=
      schema:
        type: string
        example: meytimzsgiygkljumvrgkljumu=